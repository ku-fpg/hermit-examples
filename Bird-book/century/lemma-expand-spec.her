-------------------------------------------------------------
--
-- Expand Specification - Fusion Precondition for "Century"
--
-- forall x.
--
--    map (fork (id, value)) . extend' x
-- =>
--    expand x . map (fork (id, value))

-------------------------------------------------------------

  -- map (fork (id, value)) . extend' x

       { one-td (unfold 'extend') ; backward (lemma "comp-assoc") }

  -- map (fork (id, value)) . filter (ok . value) . extend x

       { [ app-fun, app-arg ] ; lemma "6.10" }
       { lemma "comp-assoc" }

  -- filter (ok . snd) . map (fork (id,value)) . extend x

  { app-arg

    -- map (fork (id,value)) . extend x

          { [app-fun, app-arg]
            lemma "6.9"
            one-td (forward (lemma "map-id"))
          }
          { lemma "comp-assoc" }

    -- zip . fork (id, map value) . extend x

    { app-arg

      -- fork (id, map value) . extend x

            { lemma "6.6"
              one-td (forward (lemma "comp-id-L"))
            }

      -- fork (extend x, (map value . extend x))

            { [app-arg, app-arg] ; rule-unsafe "6.4" }

      -- fork (extend x, (modify x . map value))

            { app-arg ; arg 2 ; backward (lemma "comp-id-R") }

      -- fork (extend x . id, (modify x . map value))

            { lemma "6.7" }

      -- cross (extend x, modify x) . fork (id, map value)

      { app-arg

        -- fork (id, map value)

              { one-td (backward (lemma "map-id")) }

        -- fork (map id, map value)

              { lemma "6.8" }

        -- unzip . map (fork (id,value))

      }

      -- cross (extend x, modify x) . unzip . map (fork (id,value))

    }

    -- zip . cross (extend x, modify x) . unzip . map (fork (id,value))

  }

  -- filter (ok . snd) . zip . cross (extend x, modify x) . unzip . map (fork (id,value))

  { lemma "comp-assoc4"
    [ app-fun, app-arg ]

    -- filter (ok . snd) . zip . cross (extend x, modify x) . unzip

          { fold 'expand }

    -- expand x

  }

  -- expand x . map (fork (id, value))
